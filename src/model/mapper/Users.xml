<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="model.mapper.UsersMapper">
    	<!-- 中介映射转换 -->
    	<resultMap type="Users" id="UsersRM">
    		<!-- 主键映射 -->
    		<id property="id" column="userID" />
 			<!-- 普通字段映射 -->
 			<result property="account" column="userAccount" />
 			<result property="password" column="userPassword" />
 			<result property="usersname" column="borrowerName" />
 			<result property="usersphone" column="borrowerPhone" />
 			<result property="holday" column="freeDay" />
 			<result property="rate" column="fineRate" />
 			<!-- power属性两边字段一致不添加 -->
    	</resultMap>
    	<insert id="add" parameterType="Users">
    		insert into users(userAccount, userPassword, power)
    		 values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{power, jdbcType=INTEGER})
    		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
    			SELECT LAST_INSERT_ID()
    		</selectKey>
    	</insert>
    	
    	<insert id="addinfor" parameterType="Users">
    		insert into users_information 
    			values(#{id,jdbcType=INTEGER}, #{usersname, jdbcType=VARCHAR}, #{usersphone,jdbcType=VARCHAR})
    	</insert>
    	
    	<delete id="delete" parameterType="java.lang.Integer">
    		delete from users where id = #{id}
    	</delete>
    	
    	<delete id="deleteinfor" parameterType="java.lang.Integer">
    		delete from users_information where id = #{id}
    	</delete>
    	
    	<select id="get" parameterType="String" resultMap="UsersRM" >
    			select users.userID,userAccount,userPassword, borrowerName, borrowerPhone, freeDay,fineRate, users.power
			from users, fine, users_information where users.userID = users_information.userID and 
			userAccount = #{account} and fine.power = (SELECT power FROM users where userAccount = #{account});
    	</select>
    	
    	<select id="checkPassword"  parameterType="java.lang.Integer" resultType="String">
            select userPassword from users where userID = #{id}
        </select>
    	
    	<select id="list" resultMap="UsersRM">
           	select users.userID, userAccount, users.power, borrowerName, borrowerPhone, freeDay, fineRate
			FROM users, users_information, fine where users.userID = users_information.userID 
			and users.power = fine.power;
        </select>
        
        <update id="updateInform" parameterType="Users" >
            update users_information set borrowerName=#{usersname}, borrowerPhone=#{usersphone} where userID=#{id}   
        </update>
        
        <update id="updatePassword" parameterType="Users" >
            update users set userPassword=#{password} where userID=#{id}   
        </update>
        
    </mapper>